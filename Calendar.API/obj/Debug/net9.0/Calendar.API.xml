<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Calendar.API</name>
    </assembly>
    <members>
        <member name="T:Calendar.API.Controllers.AuthController">
            <summary>
            Controller for handling user authentication
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.AuthController.#ctor(Calendar.Infrastructure.ApplicationDbContext)">
            <summary>
            Controller for handling user authentication
            </summary>
        </member>
        <member name="T:Calendar.API.Controllers.AuthController.LoginRequest">
            <summary>
            Represents a login request containing user credentials
            </summary>
            <param name="Email">The user's email address</param>
        </member>
        <member name="M:Calendar.API.Controllers.AuthController.LoginRequest.#ctor(System.String)">
            <summary>
            Represents a login request containing user credentials
            </summary>
            <param name="Email">The user's email address</param>
        </member>
        <member name="P:Calendar.API.Controllers.AuthController.LoginRequest.Email">
            <summary>The user's email address</summary>
        </member>
        <member name="M:Calendar.API.Controllers.AuthController.Login(Calendar.API.Controllers.AuthController.LoginRequest)">
            <summary>
            Logs a user in. This is a simplified login that just checks if the user exists.
            </summary>
            <param name="request">The login request containing the user's email.</param>
            <returns>A confirmation message if the user exists.</returns>
            <response code="200">Login successful.</response>
            <response code="401">User not found or invalid credentials.</response>
        </member>
        <member name="T:Calendar.API.Controllers.EventsController">
            <summary>
            Controller for managing calendar events
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.#ctor(Calendar.Infrastructure.ApplicationDbContext)">
            <summary>
            Controller for managing calendar events
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.CreateEvent(Calendar.Core.Event)">
            <summary>
            Creates a new calendar event
            </summary>
            <param name="newEvent">The event details to create</param>
            <returns>The created event with its assigned ID</returns>
            <response code="201">Event created successfully</response>
            <response code="400">Invalid event data provided</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.GetAllEvents(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Retrieves all calendar events with optional date filtering
            </summary>
            <param name="startDate">Optional start date filter (events after this date)</param>
            <param name="endDate">Optional end date filter (events before this date)</param>
            <returns>A list of events matching the specified criteria</returns>
            <response code="200">Events retrieved successfully</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.GetEventById(System.Int32)">
            <summary>
            Retrieves a specific calendar event by its ID
            </summary>
            <param name="id">The unique identifier of the event</param>
            <returns>The event details including participants</returns>
            <response code="200">Event found and returned</response>
            <response code="404">Event not found</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.UpdateEvent(System.Int32,Calendar.Core.Event)">
            <summary>
            Updates an existing calendar event
            </summary>
            <param name="id">The unique identifier of the event to update</param>
            <param name="updatedEvent">The updated event data</param>
            <returns>No content on successful update</returns>
            <response code="204">Event updated successfully</response>
            <response code="404">Event not found</response>
            <response code="400">Invalid event data provided</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.DeleteEvent(System.Int32)">
            <summary>
            Deletes a calendar event
            </summary>
            <param name="id">The unique identifier of the event to delete</param>
            <returns>No content on successful deletion</returns>
            <response code="204">Event deleted successfully</response>
            <response code="404">Event not found</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.GetParticipants(System.Int32)">
            <summary>
            Gets all participants for a specific event.
            </summary>
            <param name="eventId">The unique identifier of the event.</param>
            <returns>A list of users participating in the event.</returns>
            <response code="200">Participants returned successfully.</response>
            <response code="404">Event not found.</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.AddParticipant(System.Int32,Calendar.Core.User)">
            <summary>
            Adds a participant to an existing calendar event
            </summary>
            <param name="eventId">The unique identifier of the event</param>
            <param name="participant">The user to add as a participant</param>
            <returns>Success confirmation</returns>
            <response code="200">Participant added successfully</response>
            <response code="404">Event or user not found</response>
            <response code="400">Invalid participant data</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.UpdateParticipant(System.Int32,System.Int32)">
            <summary>
            Updates a participant's details for an event (e.g., their RSVP status).
            This is a placeholder as we don't have RSVP status, but it fulfills the endpoint requirement.
            </summary>
            <param name="eventId">The unique identifier of the event.</param>
            <param name="userId">The unique identifier of the user to update.</param>
            <returns>No content on successful update.</returns>
            <response code="204">Participant updated successfully.</response>
            <response code="404">Event or participant not found.</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.RemoveParticipant(System.Int32,System.Int32)">
            <summary>
            Removes a participant from a calendar event
            </summary>
            <param name="eventId">The unique identifier of the event</param>
            <param name="userId">The unique identifier of the user to remove</param>
            <returns>No content on successful removal</returns>
            <response code="204">Participant removed successfully</response>
            <response code="404">Event or participant not found</response>
        </member>
        <member name="T:Calendar.API.Controllers.SchedulingController">
            <summary>
            Handles intelligent scheduling operations.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.SchedulingController.#ctor(Calendar.Infrastructure.ApplicationDbContext,Calendar.Core.Services.SchedulingService)">
            <summary>
            Handles intelligent scheduling operations.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.SchedulingController.FindAvailableSlots(System.Collections.Generic.List{System.Int32},System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Finds available time slots for a group of users.
            </summary>
            <param name="userIds">A comma-separated list of user IDs to include in the search.</param>
            <param name="searchStart">The start of the time window to search within.</param>
            <param name="searchEnd">The end of the time window to search within.</param>
            <param name="durationInMinutes">The required duration of the meeting in minutes.</param>
        </member>
        <member name="T:Calendar.API.Controllers.UsersController">
            <summary>
            Manages user-related operations.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.#ctor(Calendar.Infrastructure.ApplicationDbContext)">
            <summary>
            Manages user-related operations.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.CreateUser(Calendar.Core.User)">
            <summary>
            Creates a new user.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.GetAllUsers">
            <summary>
            Gets a list of all users.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.GetUserById(System.Int32)">
            <summary>
            Gets a specific user by their ID.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.UpdateUser(System.Int32,Calendar.Core.User)">
            <summary>
            Updates an existing user.
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.UsersController.DeleteUser(System.Int32)">
            <summary>
            Deletes a user by their ID.
            </summary>
        </member>
        <member name="T:Calendar.API.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Program">
            <summary>
            The main entry point for the application.
            This partial class declaration makes the auto-generated Program class public,
            which is a requirement for the WebApplicationFactory used in integration tests.
            </summary>
        </member>
    </members>
</doc>
