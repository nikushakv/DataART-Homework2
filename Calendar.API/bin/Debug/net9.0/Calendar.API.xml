<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Calendar.API</name>
    </assembly>
    <members>
        <member name="T:Calendar.API.Controllers.EventsController">
            <summary>
            Controller for managing calendar events
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.#ctor(Calendar.Infrastructure.ApplicationDbContext)">
            <summary>
            Controller for managing calendar events
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.CreateEvent(Calendar.Core.Event)">
            <summary>
            Creates a new calendar event
            </summary>
            <param name="newEvent">The event details to create</param>
            <returns>The created event with its assigned ID</returns>
            <response code="201">Event created successfully</response>
            <response code="400">Invalid event data provided</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.GetAllEvents(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Retrieves all calendar events with optional date filtering
            </summary>
            <param name="startDate">Optional start date filter (events after this date)</param>
            <param name="endDate">Optional end date filter (events before this date)</param>
            <returns>A list of events matching the specified criteria</returns>
            <response code="200">Events retrieved successfully</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.GetEventById(System.Int32)">
            <summary>
            Retrieves a specific calendar event by its ID
            </summary>
            <param name="id">The unique identifier of the event</param>
            <returns>The event details including participants</returns>
            <response code="200">Event found and returned</response>
            <response code="404">Event not found</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.UpdateEvent(System.Int32,Calendar.Core.Event)">
            <summary>
            Updates an existing calendar event
            </summary>
            <param name="id">The unique identifier of the event to update</param>
            <param name="updatedEvent">The updated event data</param>
            <returns>No content on successful update</returns>
            <response code="204">Event updated successfully</response>
            <response code="404">Event not found</response>
            <response code="400">Invalid event data provided</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.DeleteEvent(System.Int32)">
            <summary>
            Deletes a calendar event
            </summary>
            <param name="id">The unique identifier of the event to delete</param>
            <returns>No content on successful deletion</returns>
            <response code="204">Event deleted successfully</response>
            <response code="404">Event not found</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.AddParticipant(System.Int32,Calendar.Core.User)">
            <summary>
            Adds a participant to an existing calendar event
            </summary>
            <param name="eventId">The unique identifier of the event</param>
            <param name="participant">The user to add as a participant</param>
            <returns>Success confirmation</returns>
            <response code="200">Participant added successfully</response>
            <response code="404">Event or user not found</response>
            <response code="400">Invalid participant data</response>
        </member>
        <member name="M:Calendar.API.Controllers.EventsController.RemoveParticipant(System.Int32,System.Int32)">
            <summary>
            Removes a participant from a calendar event
            </summary>
            <param name="eventId">The unique identifier of the event</param>
            <param name="userId">The unique identifier of the user to remove</param>
            <returns>No content on successful removal</returns>
            <response code="204">Participant removed successfully</response>
            <response code="404">Event or participant not found</response>
        </member>
        <member name="T:Calendar.API.Controllers.AvailabilityController">
            <summary>
            Controller for intelligent scheduling and finding available time slots
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.AvailabilityController.#ctor(Calendar.Infrastructure.ApplicationDbContext,Calendar.Core.Services.SchedulingService)">
            <summary>
            Controller for intelligent scheduling and finding available time slots
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.AvailabilityController.FindAvailableSlots(System.Collections.Generic.List{System.Int32},System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Finds available time slots for multiple users within a specified time range
            </summary>
            <param name="userIds">List of user IDs to check availability for</param>
            <param name="searchStart">Start date and time for the search window</param>
            <param name="searchEnd">End date and time for the search window</param>
            <param name="durationInMinutes">Required duration for the meeting in minutes</param>
            <returns>A list of available time slots that work for all specified users</returns>
            <response code="200">Available slots found and returned</response>
            <response code="400">Invalid parameters provided (e.g., no user IDs specified)</response>
            <response code="500">Error occurred while processing the request</response>
        </member>
        <member name="T:Calendar.API.Controllers.SchedulingController">
            <summary>
            Controller for intelligent scheduling and finding available time slots
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.SchedulingController.#ctor(Calendar.Infrastructure.ApplicationDbContext,Calendar.Core.Services.SchedulingService)">
            <summary>
            Controller for intelligent scheduling and finding available time slots
            </summary>
        </member>
        <member name="M:Calendar.API.Controllers.SchedulingController.FindAvailableSlots(System.Collections.Generic.List{System.Int32},System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Finds available time slots for multiple users within a specified time range
            </summary>
            <param name="userIds">List of user IDs to check availability for</param>
            <param name="searchStart">Start date and time for the search window</param>
            <param name="searchEnd">End date and time for the search window</param>
            <param name="durationInMinutes">Required duration for the meeting in minutes</param>
            <returns>A list of available time slots that work for all specified users</returns>
            <response code="200">Available slots found and returned</response>
            <response code="400">Invalid parameters provided (e.g., no user IDs specified)</response>
            <response code="500">Error occurred while processing the request</response>
        </member>
        <member name="T:Calendar.API.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Calendar.API.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
